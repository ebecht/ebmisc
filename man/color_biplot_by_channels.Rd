% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_outputs.R
\name{color_biplot_by_channels}
\alias{color_biplot_by_channels}
\title{Colors points of a biplot (2d-tSNE, 2d-PCA...) by the intensity of channels for each flowframe in the flowset}
\usage{
color_biplot_by_channels(
  matrix,
  x_axis,
  y_axis,
  global_across_channels = T,
  palette = c("blue", "green", "red"),
  resolution = 72,
  data_transformation_reverse = identity,
  file_name = "biplot.pdf",
  raster.height = 480,
  raster.width = 480,
  ...
)
}
\arguments{
\item{matrix}{A matrix}

\item{x_axis}{The column name of the x_axis. Usually the same name you used previously in fs.append}

\item{y_axis}{The column name of the y_axis. Usually the same name you used previously in fs.append}

\item{global_across_channels}{Boolean specificying whether the color key should be calibrated across all channels or individually per channel.}

\item{palette}{A vector of colors that'll be passed to colorRampPalette}

\item{resolution}{The resolution of the files that'll be imported in the pdf. Default is 72, increase for higher resolution}

\item{data_transformation_reverse}{The colors will be linearly scaled across the range of the data. If the data was transformed, you may however want the labels which appear in your color-keys to reflect the raw intensities. In this case, this should be the inverse of the function you used to transform your data}

\item{file_name}{String of the location of the output file (should end in .pdf)}

\item{raster.height}{height of each embedded raster. Defaults to 480}

\item{raster.width}{Width of each embedded raster. Defaults to 480}

\item{...}{passed to plot (suggested: pch=16, cex=0.5 or less)}
}
\description{
Colors points of a biplot (2d-tSNE, 2d-PCA...) by the intensity of channels for each flowframe in the flowset
}
\note{
Since pdf files are vectorized, they can get really big if a lot of data point are plotted. This function thus used bitmap images that are stored in a temporary directory (tmpDir()) and then import them in a single pdf. If you're interested in using the bitmap images, you can fetch them in tmpDir()
}
